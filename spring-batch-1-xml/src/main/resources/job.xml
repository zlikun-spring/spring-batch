<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

    <import resource="classpath:context.xml"/>

    <!-- 对帐 job ，该作业由一个step组成 -->
    <batch:job id="billJob">
        <!-- 定义一个作业，该作业由一个面向批的操作组成 -->
        <batch:step id="billStep">
            <!-- 定义批处理，使用事务管理器 -->
            <batch:tasklet transaction-manager="transactionManager">
                <!-- 定义了面向批的操作，commit-interval=2表示提交间隔的大小，即：每2条数据进入一次写入操作以提高效率，生产环境可能设置一个较大值 -->
                <batch:chunk reader="csvItemReader" writer="csvItemWriter" processor="creditBillProcessor"
                             commit-interval="2"/>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <!-- 配置 ItemReader -->
    <bean id="csvItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <!-- 配置读取的资源 -->
        <property name="resource" value="classpath:credit-card-bill.csv"/>
        <!-- 用于将文本中的行转换为领域对象CreditBill -->
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer" ref="lineTokenizer" />
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="creditBill" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="creditBill" class="com.zlikun.spring.domain.CreditBill" scope="prototype" />

    <bean id="lineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <property name="delimiter" value=","/>
        <property name="names">
            <list>
                <value>accountId</value>
                <value>name</value>
                <value>amount</value>
                <value>date</value>
                <value>address</value>
            </list>
        </property>
    </bean>

    <bean id="creditBillProcessor" class="com.zlikun.spring.CreditBillProcessor" scope="step" />

    <bean id="csvItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="file:target/output.csv" />
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="delimiter" value="," />
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names" value="accountId,name,amount,date,address"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

</beans>